###############################################################################################
# check-swagger-changed-steps.yml
###############################################################################################

# This set of steps checks the previous version of swagger.json (archived by the previous
# build on the same branch) and sets a variable, swaggerChanged to 0, if swagger.json is 
# unchanged, or a value > 0 if it has.

parameters:
  apiName:              ''

steps:
  - task: DownloadPipelineArtifact@2
    displayName: 'Retrieve swagger.json from previous build'
    # TODO: review this condition (for this step and all related steps)
    condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
    inputs:
      artifact: 'swagger'
      path: '$(Pipeline.Workspace)'
      source: 'specific'
      pipeline: '$(System.DefinitionId)'
      project: '$(System.TeamProjectId)'
      runVersion: 'latestFromBranch'
      runBranch: '$(Build.SourceBranch)'

  - bash: 'echo +++ swaggerChanged variable before being set: $(swaggerChanged)'
    displayName: 'Log swaggerChanged variable'

  - bash: |
      ls -la $(Pipeline.Workspace)/swagger*.json
      SWAGGER_OUTPUT=$(cmp $(System.DefaultWorkingDirectory)/src/${{ parameters.apiName }}Proxy/AutoGeneratedSwaggerDefinition/swagger.json $(Pipeline.Workspace)/swagger*.json)
      export SWAGGER_CMP_EXIT_CODE=$?
      #echo $? | setvar -name swaggerChanged -isOutput
      echo SWAGGER_CMP_EXIT_CODE=$SWAGGER_CMP_EXIT_CODE
      echo '##vso[task.setvariable variable=swaggerChanged;]'$SWAGGER_CMP_EXIT_CODE
    condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
    displayName: 'Creating Azure pipelines variable swaggerChanged'

  - bash: 'echo +++ swaggerChanged variable after being set: $(swaggerChanged)'
    displayName: 'Log swaggerChanged variable'

  - bash: |
      mkdir -p $(Pipeline.Workspace)/variables
      echo "$(swaggerChanged)" > $(Pipeline.Workspace)/variables/swaggerChanged
      cat $(Pipeline.Workspace)/variables/swaggerChanged
    displayName: 'Save swaggerChanged variable into a file'
